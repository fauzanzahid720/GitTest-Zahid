### **📝 Glosarium Istilah Git**  

Berikut adalah daftar istilah Git yang muncul dalam lecture ini, beserta penjelasannya dengan bahasa yang **sangat mudah dimengerti**:  

---

### **A**
#### **Add (git add)**
📌 **Definisi:** Perintah Git untuk menambahkan file ke **staging area**, sebelum akhirnya di-commit.  
📌 **Analogi:** Seperti menaruh barang di dalam keranjang belanja sebelum menuju kasir.  
📌 **Contoh Perintah:**  
```bash
git add file.txt  # Menambahkan satu file
git add .         # Menambahkan semua file di folder saat ini
```

---

### **B**
#### **Branch (Cabang)**
📌 **Definisi:** Cabang dalam Git yang memungkinkan pengembangan proyek secara terpisah tanpa mengganggu branch utama.  
📌 **Analogi:** Seperti menulis draft dokumen baru tanpa mengubah dokumen asli.  
📌 **Contoh Perintah:**  
```bash
git branch fitur-baru  # Membuat branch baru bernama "fitur-baru"
git switch fitur-baru  # Berpindah ke branch "fitur-baru"
```

---

### **C**
#### **Checkout (git checkout)**
📌 **Definisi:** Perintah lama untuk berpindah branch atau commit tertentu dalam Git.  
📌 **Analogi:** Seperti berpindah ke halaman lain dalam buku catatan proyek.  
📌 **Contoh Perintah:**  
```bash
git checkout fitur-baru  # Berpindah ke branch "fitur-baru"
```
📌 **Catatan:** Sekarang lebih disarankan menggunakan `git switch`.

#### **Commit**
📌 **Definisi:** Menyimpan perubahan yang telah ditambahkan ke dalam **staging area** ke dalam repository.  
📌 **Analogi:** Seperti menekan tombol "Save" pada dokumen.  
📌 **Contoh Perintah:**  
```bash
git commit -m "Menambahkan fitur login"
```

#### **Config (git config)**
📌 **Definisi:** Perintah untuk mengatur konfigurasi Git, seperti username dan email.  
📌 **Analogi:** Seperti mengatur profil sebelum mulai bekerja di sebuah proyek.  
📌 **Contoh Perintah:**  
```bash
git config --global user.name "John Doe"
git config --global user.email "johndoe@example.com"
```

---

### **H**
#### **HEAD**
📌 **Definisi:** Pointer yang menunjukkan commit atau branch yang sedang aktif saat ini.  
📌 **Analogi:** Seperti tanda buku yang menunjukkan halaman terakhir yang sedang dibaca.  
📌 **Contoh Perintah:**  
```bash
git reset --hard HEAD~1  # Kembali ke commit sebelumnya
```

---

### **I**
#### **Init (git init)**
📌 **Definisi:** Perintah untuk menginisialisasi repository Git di dalam folder.  
📌 **Analogi:** Seperti membuat folder baru khusus untuk menyimpan catatan perubahan proyek.  
📌 **Contoh Perintah:**  
```bash
git init
```

---

### **L**
#### **Log (git log)**
📌 **Definisi:** Menampilkan riwayat commit dalam repository.  
📌 **Analogi:** Seperti melihat buku catatan yang berisi semua perubahan dalam proyek.  
📌 **Contoh Perintah:**  
```bash
git log  # Menampilkan daftar commit
git log -p  # Menampilkan detail perubahan di tiap commit
```

---

### **M**
#### **Merge (git merge)**
📌 **Definisi:** Menggabungkan perubahan dari satu branch ke branch lain.  
📌 **Analogi:** Seperti menggabungkan dua versi dokumen menjadi satu.  
📌 **Contoh Perintah:**  
```bash
git merge fitur-baru  # Menggabungkan branch "fitur-baru" ke branch saat ini
```

#### **Master (Branch Master)**
📌 **Definisi:** Branch utama dalam repository Git.  
📌 **Analogi:** Seperti dokumen utama yang menjadi acuan dalam proyek.  
📌 **Catatan:** Sekarang branch utama sering dinamakan `main`, bukan `master`.

---

### **R**
#### **Remote**
📌 **Definisi:** Repository Git yang disimpan di server online seperti **GitHub, GitLab, atau Bitbucket**.  
📌 **Analogi:** Seperti Google Drive untuk menyimpan proyek agar bisa diakses orang lain.  
📌 **Contoh Perintah:**  
```bash
git remote add origin https://github.com/user/repo.git
```

#### **Repository**
📌 **Definisi:** Tempat penyimpanan semua file dan riwayat perubahan proyek yang dikelola dengan Git.  
📌 **Analogi:** Seperti folder proyek yang menyimpan semua file dan catatan perubahannya.  
📌 **Contoh Perintah:**  
```bash
git init  # Membuat repository baru
```

#### **Reset (git reset)**
📌 **Definisi:** Menghapus commit terbaru dan kembali ke kondisi sebelumnya.  
📌 **Analogi:** Seperti menekan tombol "Undo" dalam editor teks.  
📌 **Contoh Perintah:**  
```bash
git reset --hard HEAD~1  # Menghapus commit terbaru
```

---

### **S**
#### **Staging Area**
📌 **Definisi:** Tempat penyimpanan sementara sebelum commit dilakukan.  
📌 **Analogi:** Seperti tempat persiapan sebelum memasukkan file ke dalam repository.  
📌 **Contoh Perintah:**  
```bash
git add file.txt  # Menambahkan file ke staging area
```

#### **Status (git status)**
📌 **Definisi:** Menampilkan informasi tentang status perubahan dalam repository.  
📌 **Analogi:** Seperti mengecek daftar tugas yang belum selesai.  
📌 **Contoh Perintah:**  
```bash
git status  # Menampilkan status file yang sudah atau belum di-track
```

#### **Switch (git switch)**
📌 **Definisi:** Perintah baru untuk berpindah branch, menggantikan `git checkout`.  
📌 **Analogi:** Seperti berpindah ke jalur kerja yang berbeda tanpa menghapus pekerjaan yang sedang berlangsung.  
📌 **Contoh Perintah:**  
```bash
git switch fitur-baru  # Berpindah ke branch "fitur-baru"
```

---

### **T**
#### **Tracked & Untracked Files**
📌 **Tracked Files:** File yang sudah dikenal Git dan sedang dilacak perubahannya.  
📌 **Untracked Files:** File yang belum pernah ditambahkan ke dalam Git.  
📌 **Analogi:** Seperti catatan yang sudah masuk dalam arsip (tracked) dan catatan yang belum dicatat (untracked).  
📌 **Contoh Perintah:**  
```bash
git status  # Menampilkan file yang belum di-track
```

---

### **Kesimpulan**  
Dengan memahami glosarium ini, kamu bisa lebih cepat memahami konsep Git dan bagaimana perintah-perintahnya bekerja. Jika ada istilah lain yang masih membingungkan, tinggal tanya aja! 😊🚀